import math
import collections
a,b,c,d,e = map(int,input().split(' '))#ヘッダ(a:道路情報の行数、b:交差点情報の行数、c:駐車可能箇所情報の行数、d:配達先情報の行数、e:クエリの行数)
road_info=[input().split(' ') for i in range(a)]#道路情報
inter_info=[input().split(' ') for i in range(b)]#交差点情報
park_info=[input().split(' ') for i in range(c)]#駐車可能箇所情報
ship_info=[input().split(' ') for i in range(d)]#配達先情報
query=[input().split(' ') for i in range(e)]#クエリ

inter=[]#交差点の空集合
for i in range(b):
  inter.append(inter_info[i][0])
  
park=[]#駐車場の空集合
for i in range(c):
  park.append(park_info[i][0])
park_replace = [s.replace('ES', 'SE') for s in park]#c(park_info)のESをSEに変更

road=[]#道路の空集合
for i in range(a):
  road.append(road_info[i][0])

keisan=[[] for i in range(a)]
for i in range(len(road)):
  for j in range(c):
    if park_info[j][1]==road[i]:
      keisan[i].append([park_info[j][0],park_info[j][2]])
  for m in range(d):
    if ship_info[m][1]==road[i]:
      keisan[i].append([ship_info[m][0],ship_info[m][2]])

count = 0
for i in range(a):
  print(road_info[i][2])
  print(keisan[i])
  if int(road_info[i][2]) == 0:
     count += (len(keisan[i]) + 1) * 2
     print((len(keisan[i]) + 1) * 2)
     print(count)
  else:
     count += len(keisan[i]) + 1
     print(len(keisan[i]) + 1)
     print(count)
  print("=====")

print(count)

node=len(collections.Counter(inter))+len(collections.Counter(park_replace))+d#交通ネットワークのノード数
edge_daisha=len(collections.Counter(park_replace))+d+a#台車の時のエッジ数
print("nodeの数は"+str(node))
print("無向グラフとしてみたときのedgeの数は"+str(edge_daisha))

print(road_info)
print(road)
print(keisan)
